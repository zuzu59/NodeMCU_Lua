-- Scripts pour tester le tri (sort) d'un tableau d'adresse MAC en fonction du signal de réception
-- pour les tests on charge un fichier CSV de d'adresse MAC sniffées précédemment
-- source: https://wxlua.developpez.com/tutoriels/lua/general/cours-complet/#L6-f
-- source: https://wxlua.developpez.com/tutoriels/lua/general/cours-complet/#L13-g

print("\n a_tst_sort.lua zf190208.1734 \n")

zmac_adrs={}


function zshow()
    i=1
    for k, v in pairs(zmac_adrs) do
        print(i..", ", k..", ", zmac_adrs[k]["zname"], zmac_adrs[k]["zrssi"], zmac_adrs[k]["ztime"]) 
        i=i+1
    end
end

function zload_tableau()
    filename="tst_sniffer_wifi1.csv"
    if file.open(filename, "r") then
        repeat
            local line=file.read('\n')
            if line then
--                print("line: "..line)
                local zfield = {}   local zpart=""
                for zpart in line:gmatch("[^,]+") do
                    zfield[#zfield+1] = zpart
                end
                -- :sub(1, -2) , ça enlève le \n à la fin de la ligne lors de la lecture du fichier !
                zmac_adrs[zfield[2]]={["zname"]=zfield[3],["zrssi"]=zfield[4], ["ztime"]=zfield[5]:sub(1, -2)}
            end
        until not line    
        file.close()
    end
end


zload_tableau()
--zshow()

print("tableau chargé")     --important, c'est pour attendre que le tableau soit complètement chargé !
zshow()

--[[
test_sort1=tmr.create()
tmr.alarm(test_sort1, 2.5*1000,  tmr.ALARM_SINGLE, function()
    zshow()
end)
]]



function zsort_tableau()
    print("tri du tableau")
    table.sort(zmac_adrs, function(a,b) return a.zrssi < b.zrssi end)


end

function zshow2()
    i=1
    
    --for i,v in ipairs(zmac_adrs) do print(v.zrssi) end
    for j,v in pairs(zmac_adrs) do 
        print(i,j)
        i=i+1
    end

--    i=1
--    for k, v in pairs(zmac_adrs) do
--       print(i..", ", k..", ", zmac_adrs[k]["zname"], zmac_adrs[k]["zrssi"], zmac_adrs[k]["ztime"]) 
--       i=i+1
--    end
end


function toto()
    local animals = {
         {name = "bunny", size = 4},
         {name = "mouse", size = 1},
         {name = "cow", size = 30}
    }
    -- sort animals by size descending
    table.sort(animals, function(a,b) return a.size > b.size end)
    
    for i,v in ipairs(animals) do print(v.name) end
end




--[[
zload_tableau()
zsort_tableau()
zshow()
zshow2()

]]



--[[
zshow()
]]

function zround(num, dec)
    local mult = 10^(dec or 0)
    return math.floor(num * mult + 0.5) / mult
end


--[[
zload_tableau()
zshow()
]]


